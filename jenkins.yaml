credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          id: "jenkins"
          password: "{AQAAABAAAAAQ6e1zCgw02Y2Z2pM0QpFzyKl8MLGa5RcanVUdLkXc1Po=}"
          scope: GLOBAL
          username: "jenkins"
      - usernamePassword:
          id: "github"
          password: "{AQAAABAAAAAQGTFSkuu2wWbwxy3j1XfYdoHSs3dUGOP2cLCwOmrEE7s=}"
          scope: GLOBAL
          username: "charanb.sre@gmail.com"
      - usernamePassword:
          id: "gittoken"
          password: "{AQAAABAAAAAwGe1S7Aq3EwaYPYJ+YMPiKvgDbwQF7E8AF2hCWLPG8NMYbhRPxh//3nsg/1dSvWSmK6IISZSUqkJwn7jQVNlCcg==}"
          scope: GLOBAL
          username: "charanb.sre@gmail.com"
      - usernamePassword:
          id: "dhub"
          password: "{AQAAABAAAAAQDolsAsycsEhdqDe0aNGYf48JSWTYKganKcabQ4eQUvE=}"
          scope: GLOBAL
          username: "narayanacharan"
      - azure:
          azureEnvironmentName: "Azure"
          clientId: "1ee02188-99db-424b-bf71-11772c7da4c5"
          clientSecret: "****"
          id: "Azure-key-vault"
          scope: GLOBAL
          subscriptionId: "a355c32e-4a22-4b05-aab4-be236850fa6e"
          tenant: "9085ff8c-8807-4ff8-a403-ea470525cda6"
      - file:
          description: "k8config"
          fileName: "config"
          id: "k8config"
          scope: GLOBAL
          secretBytes: "{}"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
  - docker:
      dockerApi:
        connectTimeout: 60
        dockerHost:
          uri: "tcp://192.168.29.207:4243"
        readTimeout: 60
      exposeDockerHost: true
      name: "docker"
      templates:
      - connector:
          ssh:
            sshKeyStrategy:
              manuallyConfiguredSSHKey:
                credentialsId: "jenkins"
                sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
        dockerTemplateBase:
          cpuPeriod: 0
          cpuQuota: 0
          image: "narayanacharan/jenkins-slave:7.0"
          pullCredentialsId: "dhub"
        labelString: "java-docker-slave"
        name: "java-docker-slave"
        pullStrategy: PULL_ALWAYS
        pullTimeout: 300
        remoteFs: "/home/jenkins"
  - kubernetes:
      containerCap: 10
      containerCapStr: "10"
      credentialsId: "k8config"
      jenkinsUrl: "https://c600-2405-201-c002-a988-20c-29ff-fe9f-229f.ngrok-free.app/"
      name: "kubernetes"
      serverUrl: "https://nextopsaks01-dns-g49pt1dh.hcp.eastus.azmk8s.io:443"
      webSocket: true
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  disabledAdministrativeMonitors:
  - "jenkins.diagnostics.ControllerExecutorsNoAgents"
  - "jenkins.diagnostics.ControllerExecutorsAgents"
  - "hudson.diagnosis.ReverseProxySetupMonitor"
  labelAtoms:
  - name: "built-in"
  - name: "java-docker-slave"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "charan"
        name: "Charan"
        properties:
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - mailer:
            emailAddress: "charanb.sre@gmail.com"
        - "apiToken"
  slaveAgentPort: -1
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  sSHD:
    port: -1
  scriptApproval:
    approvedScriptHashes:
    - "SHA512:3f205299bef2fe3329258a42f2c60d332cc35ccb41a3ca0512d7869c6aff4561ff708c48123b4f7c3dec33ccca30d54fb8b9b51b5bc7070f96236d11a3f0bdcb"
unclassified:
  azureKeyVault:
    credentialID: "Azure-key-vault"
    keyVaultURL: "https://nextopsakv01.vault.azure.net/"
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  buildStepOperation:
    enabled: false
  casCGlobalConfig:
    configurationPath: "/home/charan/jcasc.yaml"
  email-ext:
    adminRequiredForTemplateTesting: false
    allowUnregisteredEnabled: false
    charset: "UTF-8"
    debugMode: false
    defaultBody: |-
      $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

      Check console output at $BUILD_URL to view the results.
    defaultContentType: "text/plain"
    defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
    defaultTriggerIds:
    - "hudson.plugins.emailext.plugins.trigger.FailureTrigger"
    maxAttachmentSize: -1
    maxAttachmentSizeMb: -1
    precedenceBulk: false
    watchingEnabled: false
  enrichedSummaryConfig:
    enrichedSummaryEnabled: false
    httpClientDelayBetweenRetriesInSeconds: 1
    httpClientMaxRetries: 3
    httpClientTimeoutInSeconds: 1
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  ghprbTrigger:
    autoCloseFailedPullRequests: false
    cron: "H/5 * * * *"
    extensions:
    - ghprbSimpleStatus:
        addTestResults: false
        showMatrixStatus: false
    githubAuth:
    - credentialsId: "gittoken"
      description: "TokenAuth"
      id: "1ea344cd-6163-4ce6-99ef-23cd828947fb"
      secret: "{AQAAABAAAAAQaDVNjPeN61yTacIyEh2DZkhbByzzFcxF/nFDICMY8VE=}"
      serverAPIUrl: "https://api.github.com"
    manageWebhooks: true
    okToTestPhrase: ".*ok\\W+to\\W+test.*"
    requestForTestingPhrase: "Can one of the admins verify this patch?"
    retestPhrase: ".*test\\W+this\\W+please.*"
    skipBuildPhrase: ".*\\[skip\\W+ci\\].*"
    useComments: false
    useDetailedComments: false
    whitelistPhrase: ".*add\\W+to\\W+whitelist.*"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  gitHubPluginConfig:
    hookUrl: "http://192.168.29.207:8080/github-webhook/"
  globalTimeOutConfiguration:
    operations:
    - "abortOperation"
    overwriteable: false
  injectionConfig:
    allowUntrusted: false
    enabled: false
    enforceUrl: false
    injectCcudExtension: false
    injectMavenExtension: false
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "https://c600-2405-201-c002-a988-20c-29ff-fe9f-229f.ngrok-free.app/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  timestamper:
    allPipelines: false
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
